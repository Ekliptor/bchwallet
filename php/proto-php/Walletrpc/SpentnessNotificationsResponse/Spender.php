<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Walletrpc\SpentnessNotificationsResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>walletrpc.SpentnessNotificationsResponse.Spender</code>
 */
class Spender extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes transaction_hash = 1;</code>
     */
    protected $transaction_hash = '';
    /**
     * Generated from protobuf field <code>uint32 input_index = 2;</code>
     */
    protected $input_index = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $transaction_hash
     *     @type int $input_index
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes transaction_hash = 1;</code>
     * @return string
     */
    public function getTransactionHash()
    {
        return $this->transaction_hash;
    }

    /**
     * Generated from protobuf field <code>bytes transaction_hash = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTransactionHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->transaction_hash = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 input_index = 2;</code>
     * @return int
     */
    public function getInputIndex()
    {
        return $this->input_index;
    }

    /**
     * Generated from protobuf field <code>uint32 input_index = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setInputIndex($var)
    {
        GPBUtil::checkUint32($var);
        $this->input_index = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Spender::class, \Walletrpc\SpentnessNotificationsResponse_Spender::class);

