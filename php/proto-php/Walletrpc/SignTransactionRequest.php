<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Walletrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>walletrpc.SignTransactionRequest</code>
 */
class SignTransactionRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes passphrase = 1;</code>
     */
    protected $passphrase = '';
    /**
     * Generated from protobuf field <code>bytes serialized_transaction = 2;</code>
     */
    protected $serialized_transaction = '';
    /**
     * If no indexes are specified, signatures scripts will be added for
     * every input. If any input indexes are specified, only those inputs
     * will be signed.  Rather than returning an incompletely signed
     * transaction if any of the inputs to be signed can not be, the RPC
     * immediately errors.
     *
     * Generated from protobuf field <code>repeated uint32 input_indexes = 3;</code>
     */
    private $input_indexes;
    /**
     * Values must be provided for each input in order to sign using
     * the bitcoin cash signing algorithm.
     *
     * Generated from protobuf field <code>repeated int64 input_values = 4;</code>
     */
    private $input_values;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $passphrase
     *     @type string $serialized_transaction
     *     @type int[]|\Google\Protobuf\Internal\RepeatedField $input_indexes
     *           If no indexes are specified, signatures scripts will be added for
     *           every input. If any input indexes are specified, only those inputs
     *           will be signed.  Rather than returning an incompletely signed
     *           transaction if any of the inputs to be signed can not be, the RPC
     *           immediately errors.
     *     @type int[]|string[]|\Google\Protobuf\Internal\RepeatedField $input_values
     *           Values must be provided for each input in order to sign using
     *           the bitcoin cash signing algorithm.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes passphrase = 1;</code>
     * @return string
     */
    public function getPassphrase()
    {
        return $this->passphrase;
    }

    /**
     * Generated from protobuf field <code>bytes passphrase = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPassphrase($var)
    {
        GPBUtil::checkString($var, False);
        $this->passphrase = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes serialized_transaction = 2;</code>
     * @return string
     */
    public function getSerializedTransaction()
    {
        return $this->serialized_transaction;
    }

    /**
     * Generated from protobuf field <code>bytes serialized_transaction = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSerializedTransaction($var)
    {
        GPBUtil::checkString($var, False);
        $this->serialized_transaction = $var;

        return $this;
    }

    /**
     * If no indexes are specified, signatures scripts will be added for
     * every input. If any input indexes are specified, only those inputs
     * will be signed.  Rather than returning an incompletely signed
     * transaction if any of the inputs to be signed can not be, the RPC
     * immediately errors.
     *
     * Generated from protobuf field <code>repeated uint32 input_indexes = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInputIndexes()
    {
        return $this->input_indexes;
    }

    /**
     * If no indexes are specified, signatures scripts will be added for
     * every input. If any input indexes are specified, only those inputs
     * will be signed.  Rather than returning an incompletely signed
     * transaction if any of the inputs to be signed can not be, the RPC
     * immediately errors.
     *
     * Generated from protobuf field <code>repeated uint32 input_indexes = 3;</code>
     * @param int[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInputIndexes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::UINT32);
        $this->input_indexes = $arr;

        return $this;
    }

    /**
     * Values must be provided for each input in order to sign using
     * the bitcoin cash signing algorithm.
     *
     * Generated from protobuf field <code>repeated int64 input_values = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInputValues()
    {
        return $this->input_values;
    }

    /**
     * Values must be provided for each input in order to sign using
     * the bitcoin cash signing algorithm.
     *
     * Generated from protobuf field <code>repeated int64 input_values = 4;</code>
     * @param int[]|string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInputValues($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT64);
        $this->input_values = $arr;

        return $this;
    }

}

